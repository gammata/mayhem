#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  turretbase, bigflare, bigbarrel, bigsleeve, bigturret, body, pivot, torp,
       tube, wake1, wake2, base;

static-var  bMoving, depth_2, restore_3, reset_4, x_slope, z_slope;


RestoreAfterDelay()
{
	sleep 6000;
	if( !restore_3 )
	{
		turn turretbase to y-axis <0> speed <60>;
		turn pivot to y-axis <0> speed <30>;
		turn body to y-axis <0> speed <30>;
		turn bigsleeve to x-axis <0> speed <20>;
		signal 2;
		signal 4;
	}
	reset_4 = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		if( restore_3 AND !reset_4 )
		{
			restore_3 = 0;
			reset_4 = 1;
			start-script RestoreAfterDelay();
		}
		sleep sleeptime;
	}
}

Create()
{
	hide bigflare;
	restore_3 = 0;
	reset_4 = 0;
	x_slope = 0;
	z_slope = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script SmokeUnit();
}

setSFXoccupy(Func_Var_1)
{
	depth_2 = Func_Var_1;
	/*0 = being transported
	1 = on the water
	2 = partially submerged
	3 = totally underwater
	4 = totally over land [or air]*/
}

StartMoving()
{
	signal 8;
	set-signal-mask 8;
	bMoving = TRUE;	
	var lxsnxs, lzsnzs;	
	while( bMoving )
	{
		if( depth_2 == 3 )
		{
			emit-sfx 259 from bigturret;
			emit-sfx 259 from wake1;
			emit-sfx 259 from wake2;
		}
		sleep 300;
		lxsnxs=x_slope;// old slope
		lzsnzs=z_slope;// old slope
		if( depth_2!=0 )// Not transported: read the ground slope
		{
			x_slope=get ATAN(get GROUND_HEIGHT(get PIECE_XZ(base)) - get GROUND_HEIGHT(get PIECE_XZ(bigflare)), get XZ_HYPOT(get PIECE_XZ(base) - get PIECE_XZ(bigflare)));
			while(x_slope>32768)
			{	x_slope=x_slope - 65536;	}
			z_slope=get ATAN(get GROUND_HEIGHT(get PIECE_XZ(wake1)) - get GROUND_HEIGHT(get PIECE_XZ(wake2)), get XZ_HYPOT(get PIECE_XZ(wake1) - get PIECE_XZ(wake2)));
			while(z_slope>32768)
			{	z_slope=z_slope - 65536;	}
		}
		if( depth_2==0 )// Transported: turn unit back to upright
		{
			x_slope=0;
			z_slope=0;
		}
		lxsnxs=lxsnxs - x_slope;// slope delta with time
		lzsnzs=lzsnzs - z_slope;// slope delta with time
		if(lxsnxs<0)
		{	lxsnxs=0 - lxsnxs;	}// absoluted
		if(lzsnzs<0)
		{	lzsnzs=0 - lzsnzs;	}// absoluted
		turn base to x-axis x_slope speed lxsnxs*3;
		turn base to z-axis z_slope speed lzsnzs*3;
	}
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turretbase to y-axis heading speed <50>;
	turn bigsleeve to x-axis <0> - pitch speed <30>;
	turn pivot to y-axis heading speed <50>;
	turn body to y-axis <0> - heading speed <50>;
	wait-for-turn turretbase around y-axis;
	wait-for-turn bigsleeve around x-axis;
	restore_3 = 1;
	return (1);
}

AimTertiary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	while( depth_2 != 3 )
	{
		sleep 500;
	}
	restore_3 = 1;
	return (1);
}

FirePrimary()
{
	turn pivot to x-axis <-4> speed <40>;
	show bigflare;
	move bigbarrel to z-axis [-4] speed [500];
	move bigsleeve to z-axis [-2] speed [300];
	sleep 150;
	hide bigflare;
	turn pivot to x-axis 0 speed <20>;
	move bigsleeve to z-axis 0 speed [3];
	move bigbarrel to z-axis 0 speed [2];
	wait-for-move bigflare along z-axis;
}

QueryPrimary(piecenum)
{
	piecenum = bigflare;
}

AimFromPrimary(piecenum)
{
	piecenum = bigsleeve;
}

AimFromTertiary(piecenum)
{
	piecenum = tube;
}

QueryTertiary(piecenum)
{
	piecenum = tube;
}

FireTertiary()
{
}

Killed(severity, corpsetype)
{
	hide bigflare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode turretbase type BITMAPONLY | BITMAP4;
		explode bigsleeve type FALL | BITMAP2;
		explode bigbarrel type BITMAPONLY | BITMAP2;
		explode torp type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode turretbase type BITMAPONLY | BITMAP4;
		explode bigsleeve type FALL | SMOKE | BITMAP2;
		explode bigbarrel type FALL | SMOKE | BITMAP2;
		explode torp type FALL | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode turretbase type SHATTER | BITMAP2;
		explode bigsleeve type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode bigbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode torp type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turretbase type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode bigsleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode bigbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode torp type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}
