#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, wing1, wing2;

static-var on_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}


Create()
{
	set ARMORED to 1;
	on_1 = 1;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

Activate()
{
	if( !on_1 )
	{
		set ARMORED to 1;
	}
	on_1 = 1;
	move wing1 to x-axis [-4.50] speed [4.96];
	move wing2 to x-axis [5.85] speed [6.44];
	sleep 948;
	return (0);
}

Deactivate()
{
	move wing1 to x-axis [0] speed [4.96];
	move wing2 to x-axis [0] speed [6.44];
	sleep 948;
	if( on_1 )
	{
		set ARMORED to 0;
	}
	on_1 = 0;
	return (0);
}

StartBuilding(sleeptime)
{
	sleeptime = Rand(1,500);
	sleep sleeptime;
	set INBUILDSTANCE to 1;
	return (0);
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	return (0);
}

QueryNanoPiece(piecenum)
{
	piecenum = base;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	explode base type BITMAPONLY | BITMAP1;
	explode wing1 type BITMAPONLY | BITMAP2;
	explode wing2 type BITMAPONLY | BITMAP3;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (0);
	}
	corpsetype = 3;
	return (0);
}