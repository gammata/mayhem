#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1a, flare2a, flare1b, flare2b, base, wing1, wing2, tail1,
       tail2, weapon1, weapon2; 

static-var  Gun_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	set ARMORED to 1;
	Gun_1 = 0;
	start-script SmokeUnit();
	return (0);
}

Activate()
{
	move wing1 to x-axis [3.50] speed [4.2];
	move wing2 to x-axis [-3.50] speed [4.2];
	turn tail1 to z-axis <45> speed <65>;
	turn tail2 to z-axis <-45> speed <65>;
	move weapon1 to x-axis [-2.4] speed [2.3];
	move weapon2 to x-axis [2.4] speed [2.3];
	return (0);
}

Deactivate()
{
	move weapon1 to x-axis [0] speed [2.3];
	move weapon2 to x-axis [0] speed [2.3];
	move wing1 to x-axis [0] speed [2.7];
	move wing2 to x-axis [0] speed [2.7];
	turn tail1 to z-axis <90> speed <40>;
	turn tail2 to z-axis <-90> speed <40>;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

FirePrimary()
{
	++Gun_1;
	if( Gun_1 > 3 )
	{
		Gun_1 = 0;
	}
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = Gun_1;
	return (0);
}

//AimSecondary(Func_Var_1, Func_Var_2)
//{
//	return (0);
//}

//QuerySecondary(piecenum)
//{
//	piecenum = base;
//	return (0);
//}

Killed(severity, corpsetype)
{
	hide flare1a;
	hide flare2a;
	hide flare1b;
	hide flare2b;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode wing1 type BITMAPONLY | BITMAP2;
		explode wing2 type BITMAPONLY | BITMAP3;
		explode tail1 type BITMAPONLY | BITMAP4;
		explode tail2 type BITMAPONLY | BITMAP5;
		explode weapon1 type BITMAPONLY | BITMAP1;
		explode weapon2 type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode wing1 type BITMAPONLY | BITMAP2;
		explode wing2 type BITMAPONLY | BITMAP3;
		explode tail1 type FALL | BITMAP4;
		explode tail2 type FALL | BITMAP5;
		explode weapon1 type BITMAPONLY | BITMAP1;
		explode weapon2 type SHATTER | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode wing1 type BITMAPONLY | BITMAP2;
	explode wing2 type BITMAPONLY | BITMAP3;
	explode tail1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode tail2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode weapon1 type BITMAPONLY | BITMAP1;
	explode weapon2 type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	return (0);
}