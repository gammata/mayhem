#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body, wheel1, wheel2, wheel3, base;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}	

Create()
{
	dont-shade wheel1;
	dont-shade wheel2;
	dont-shade wheel3;
	dont-shade body;
	dont-cache body;
	start-script SmokeUnit();
}

Activate()
{
	dont-cache wheel1;
	dont-cache wheel2;
	dont-cache wheel3;
	spin wheel1 around y-axis speed <25.005495> accelerate <2.5>;
	spin wheel2 around y-axis speed <10> accelerate <1>;
	spin wheel3 around y-axis speed <6> accelerate <0.6>;
}

Deactivate()
{
	spin wheel1 around y-axis speed <0>;
	spin wheel2 around y-axis speed <0>;
	spin wheel3 around y-axis speed <0>;
	cache wheel1;
	cache wheel2;
	cache wheel3;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode wheel1 type BITMAPONLY | BITMAP2;
		explode wheel2 type BITMAPONLY | BITMAP1;
		explode wheel3 type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		explode wheel1 type BITMAPONLY | BITMAP2;
		explode wheel2 type BITMAPONLY | BITMAP1;
		explode wheel3 type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode wheel1 type BITMAPONLY | BITMAP2;
		explode wheel2 type BITMAPONLY | BITMAP2;
		explode wheel3 type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode body type BITMAPONLY | BITMAP1;
	explode wheel1 type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode wheel2 type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode wheel3 type SHATTER | EXPLODE_ON_HIT | BITMAP2;
}
