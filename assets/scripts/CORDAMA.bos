#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, flare3, barrel1, barrel2, barrel3, sleeve, turret,
       rwing, lwing, rwinglet, lwinglet, drop1, drop2, stripes, flashy,
       glowy, body, base;

static-var  gun_1, gun_3;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	set ARMORED to 1;
	gun_1 = 0;
	gun_3 = 0;
	hide flare1;
	hide flare2;
	hide flare3;
	dont-cache flare1;
	dont-cache flare2;
	dont-cache flare3;
	dont-cache glowy;
	sleep 100;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	hide flashy;
	show stripes;
	sleep 100;
	hide flashy;
	show stripes;
	start-script SmokeUnit();
}

Activate()
{
	turn LWing to z-axis <0> now;
	turn LWinglet to z-axis <0> now;
	turn RWing to z-axis <0> now;
	turn RWinglet to z-axis <0> now;
	turn LWing to z-axis <90> speed <45>;
	turn LWinglet to z-axis <-179.50> speed <90>;
	turn RWing to z-axis <-90> speed <45>;
	turn RWinglet to z-axis <179.50> speed <90>;
	move turret to y-axis [0.9] speed [1];
}

Deactivate()
{
	turn LWing to z-axis <90> now;
	turn RWing to z-axis <-90> now;
	turn LWinglet to z-axis <-179.50> now;
	turn RWinglet to z-axis <179.50> now;
	turn LWing to z-axis <0> speed <50>;
	turn RWing to z-axis <0> speed <50>;
	turn LWinglet to z-axis <0> speed <100>;
	turn RWinglet to z-axis <0> speed <100>;
	move turret to y-axis [0] speed [1];
}

QueryPrimary(piecenum)
{
	gun_1 = !gun_1;
	if( gun_1 )
	{ 
		piecenum = drop1;
	}
	if( !gun_1 )
	{ 
		piecenum = drop2;
	}
	signal 4;
	set-signal-mask 4;
	hide stripes;
	show flashy;
	dont-cache flashy;
	sleep 19500;
	hide flashy;
	show stripes;		
}

RestoreAfterDelay()
{
	sleep 5000;
	turn Turret to y-axis <0> speed <240>;
	turn sleeve to x-axis <0> speed <180>;
}

AimTertiary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn Turret to y-axis heading speed <700>;
	if( pitch < 0 )
	{
		turn sleeve to x-axis <0> - pitch speed <500>;
		wait-for-turn sleeve around x-axis;
	}
	wait-for-turn Turret around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireTertiary()
{
	if( !gun_3 )
	{
		show flare1;
		move Barrel1 to z-axis [-2] speed [500];
		sleep 150;
		hide flare1;
		move Barrel1 to z-axis [0] speed [2];
	}
	if( gun_3 == 1 )
	{
		show flare2;
		move Barrel2 to z-axis [-2] speed [500];
		sleep 150;
		hide flare2;
		move Barrel2 to z-axis [0] speed [2];
	}
	++gun_3;
	if( gun_3 > 2 )
	{
		show flare3;
		move Barrel3 to z-axis [-2] speed [500];
		sleep 150;
		hide flare3;
		move Barrel3 to z-axis [0] speed [2];
		gun_3 = 0;
	}
}

AimFromTertiary(piecenum)
{
	piecenum = Turret;
}

QueryTertiary(piecenum)
{
	piecenum = gun_3;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAPNUKE;
		explode LWinglet type BITMAPONLY | BITMAP3;
		explode RWinglet type BITMAPONLY | BITMAP4;
		explode LWing type BITMAPONLY | BITMAP3;
		explode RWing type BITMAPONLY | BITMAP4;
		explode Turret type BITMAPONLY | BITMAP3;
		explode Barrel1 type FALL | BITMAP5;
		explode Barrel2 type FALL | BITMAP5;
		explode Barrel3 type FALL | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAPNUKE;
		explode LWinglet type FALL | BITMAP3;
		explode RWinglet type FALL | BITMAP4;
		explode LWinglet type FALL | BITMAP3;
		explode RWinglet type FALL | BITMAP4;
		explode LWing type BITMAPONLY | BITMAP3;
		explode RWing type BITMAPONLY | BITMAP4;
		explode Turret type BITMAPONLY | BITMAP3;
		explode Barrel1 type FALL | FIRE | BITMAP5;
		explode Barrel2 type FALL | FIRE | BITMAP5;
		explode Barrel3 type FALL | FIRE | BITMAP5;
		explode glowy type SHATTER | EXPLODE_ON_HIT | BITMAPNUKE;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAPNUKE;
		explode LWinglet type SHATTER | EXPLODE_ON_HIT | BITMAP3;
		explode RWinglet type SHATTER | EXPLODE_ON_HIT | BITMAP4;
		explode LWing type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode RWing type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode Turret type BITMAPONLY | BITMAP3;
		explode Barrel1 type FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode Barrel2 type FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode Barrel3 type FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode glowy type SHATTER | FIRE | EXPLODE_ON_HIT | BITMAPNUKE;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAPNUKE;
	explode LWinglet type SHATTER | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode RWinglet type SHATTER | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode LWing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode RWing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode Turret type BITMAPONLY | BITMAP3;
	explode Barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode Barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode Barrel3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode glowy type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAPNUKE;
}
