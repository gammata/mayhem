#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  wing1, wing2, wake1, wake2, jet1, jet2, bomb, body,
       base;

static-var  gun_1, Waterdepth_2;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	set ARMORED to 1;
	gun_1 = 0;
	Waterdepth_2 = 3;
	turn wing1 to z-axis <90> NOW;
	turn wing2 to z-axis <-90> NOW;
	start-script SmokeUnit();
	return (0);
}

Activate()
{
	turn wing1 to z-axis <0> speed <45>;
	turn wing2 to z-axis <0> speed <45>;
	return (0);
}

Deactivate()
{
	turn wing1 to z-axis <90> speed <32>;
	turn wing2 to z-axis <-90> speed <32>;
	return (0);
}

StartMoving()
{
	signal 2;
	set-signal-mask 2;
	while( TRUE )
	{
		if( Waterdepth_2 == 3 )
		{
			emit-sfx 256 | 3 from wing1;
			emit-sfx 256 | 3 from wing2;
			emit-sfx 256 | 3 from jet1;
			emit-sfx 256 | 3 from jet2;
			emit-sfx 256 | 3 from wake1;
			emit-sfx 256 | 3 from wake2;
			emit-sfx 256 | 3 from bomb;
			emit-sfx 256 | 3 from base;
		}
		sleep 200;
	}
	return (0);
}

StopMoving()
{
	signal 2;
	return (0);
}

setSFXoccupy(Func_Var_1)
{
	Waterdepth_2 = Func_Var_1;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = bomb;
	return (0);
}


QueryTertiary(piecenum)
{
	piecenum = gun_1;
	return (0);
}

FireTertiary()
{
	gun_1 = ( !gun_1 );
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode wing2 type BITMAPONLY | BITMAP1;
		explode wing1 type BITMAPONLY | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode wake1 type BITMAPONLY | BITMAP4;
		explode wake2 type BITMAPONLY | BITMAP5;
		explode bomb type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode wing2 type BITMAPONLY | BITMAP1;
		explode wing1 type SHATTER | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode wake1 type BITMAPONLY | BITMAP4;
		explode wake2 type BITMAPONLY | BITMAP5;
		explode bomb type FALL | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode wing2 type SHATTER | BITMAP1;
		explode wing1 type SHATTER | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode wake1 type BITMAPONLY | BITMAP4;
		explode wake2 type BITMAPONLY | BITMAP5;
		explode bomb type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	explode wing2 type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode wing1 type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode base type BITMAPONLY | BITMAP3;
	explode wake1 type BITMAPONLY | BITMAP4;
	explode wake2 type BITMAPONLY | BITMAP5;
	explode bomb type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	return (0);
}