#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  fire1, fire2, gun, gun2, turret, turret2, missile, winga, 
       wingb, taila, tailb, thrusta1, thrusta2, 
       base;

static-var  gun_1, gun_2, reload_3, roll_4;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MoveRate2()
{
	if( Rand( 1, 8 ) == 1 AND ( !roll_4 ) )
	{
		roll_4 = 1;
		if( Rand( 1, 2 ) == 1 )
		{
			turn base to z-axis <240> speed <120>;
			wait-for-turn base around z-axis;
			turn base to z-axis <120> speed <180>;
			wait-for-turn base around z-axis;
			turn base to z-axis <0> speed <120>;
			roll_4 = 0;
		}
	}
}

Create()
{
	set ARMORED to 1;
	gun_1 = 0;
	gun_2 = 0;
	roll_4 = 0;
	start-script SmokeUnit();
}

Activate()
{
	turn winga to z-axis <-90> speed <70>;
	turn wingb to z-axis <90> speed <70>;
	turn taila to z-axis <-25> speed <20>;
	turn tailb to z-axis <25> speed <20>;
}

Deactivate()
{
	turn winga to z-axis <0> speed <40>;
	turn wingb to z-axis <0> speed <40>;
	turn taila to z-axis <0> speed <12.5>;
	turn tailb to z-axis <0> speed <12.5>;
	turn turret to z-axis <0> speed <240>;
	turn turret2 to z-axis <0> speed <240>;
}

RestorePrimary()
{
	sleep 5000;
	turn turret to z-axis <0> speed <240>;
}

RestoreSecondary()
{
	sleep 5000;
	turn turret2 to z-axis <0> speed <240>;
}

QueryTertiary(piecenum)
{
	piecenum = missile;
}

QueryPrimary(piecenum)
{
	piecenum = fire1;
}

QuerySecondary(piecenum)
{
	piecenum = fire2;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn turret to x-axis heading speed <750>;
	wait-for-turn turret around x-axis;
	start-script RestorePrimary();
	return(1);
}

AimSecondary(heading, pitch)
{
	signal 4;
	set-signal-mask 0;
	set-signal-mask 4;
	turn turret2 to x-axis heading speed <750>;
	wait-for-turn turret2 around x-axis;
	start-script RestoreSecondary();
	return(1);
}

FirePrimary()
{
}

FireSecondary()
{
}

AimFromPrimary(piecenum)
{
	piecenum = fire1;
}

AimFromSecondary(piecenum)
{
	piecenum = fire2;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		explode fire1 type BITMAPONLY | BITMAP3;
		explode fire2 type BITMAPONLY | BITMAP4;
		explode taila type BITMAPONLY | BITMAP5;
		explode tailb type BITMAPONLY | BITMAP1;
		explode winga type BITMAPONLY | BITMAP3;
		explode wingb type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode turret type FALL | BITMAP2;
		explode fire1 type FALL | BITMAP3;
		explode fire2 type FALL | BITMAP4;
		explode taila type FALL | BITMAP5;
		explode tailb type FALL | BITMAP1;
		explode winga type SHATTER | BITMAP3;
		explode wingb type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode fire1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode fire2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode taila type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode tailb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode winga type SHATTER | BITMAP3;
		explode wingb type BITMAPONLY | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode fire1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode fire2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode taila type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode tailb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode winga type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode wingb type BITMAPONLY | BITMAP4;
}
