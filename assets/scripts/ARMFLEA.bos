#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"
//#include "unitsweaps.h"

piece  body, turret, flare, barrel, lfupleg, lrupleg, rrupleg, head,
       rfupleg, rrleg, rfleg, lrleg, lfleg;

static-var  bMoving, bAiming, Reload_4;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(Justmoved)
{
	Justmoved = 1;
	while( TRUE )
	{
		if( bMoving )
		{
			move lfupleg to y-axis [0] now;
			move lfupleg to y-axis [0.25] speed [2.27];
			move lrupleg to y-axis [0] now;
			move lrupleg to y-axis [0.9] speed [8.18];
			move rrupleg to y-axis [0] now;
			move rrupleg to y-axis [0.8] speed [7.27];
			if( !bAiming )
			{
				turn body to x-axis <11.84> now;
				turn body to x-axis <22.26> speed <94.76>;
			}
			turn head to x-axis <8.53> now;
			turn head to x-axis <20.37> speed <107.68>;
			turn lfupleg to x-axis <-50.22> now;
			turn lfupleg to x-axis <-22.26> speed <254.126>;
			turn lrupleg to x-axis <23.21> now;
			turn lrupleg to x-axis <-28.9> speed <473.8>;
			turn rfupleg to x-axis <-49.27> now;
			turn rfupleg to x-axis <-32.69> speed <150.75>;
			turn rrupleg to x-axis <27.478> now;
			turn rrupleg to x-axis <-20.846> speed <439.335>;
			turn rrleg to x-axis <45> now;
			turn rrleg to x-axis <-24.637> speed <633.16>;
			turn rfleg to x-axis <0> now;
			turn rfleg to x-axis <12.319> speed <112>;
			turn lrleg to x-axis <44.527> now;
			turn lrleg to x-axis <-9.945> speed <495.335>;
			sleep 110;
			if( bMoving )
			{
				move lfupleg to y-axis [0.75] speed [4.42];
				move lrupleg to y-axis [1.6] speed [6.19];
				move rfupleg to y-axis [0.85] speed [7.52];
				move rrupleg to y-axis [1.45] speed [5.75];
				if( !bAiming )
				{
					turn body to x-axis <0.945> speed <188.676>;
				}
				turn lfupleg to x-axis <53.538> speed <670.857>;
				turn lrupleg to x-axis <-39.797> speed <96.43>;
				turn rfupleg to x-axis <51.165> speed <742.137>;
				turn rrupleg to x-axis <-32.209> speed <100.626>;
				turn rrleg to x-axis <14.687> speed <348>;
				turn rfleg to x-axis <-52.115> speed <570.236>;
				turn lrleg to x-axis <25.577> speed <314.467>;
				turn lfleg to x-axis <-52.588> speed <465.407>;
				sleep 113;
			}
			if( bMoving )
			{
				move lrupleg to y-axis [1.83] speed [4];
				move rrupleg to y-axis [1.73] speed [4.91];
				turn body to x-axis <-12.549> speed <241.126>;
				turn lfupleg to x-axis <87.407> speed <604.94>;
				turn lrupleg to x-axis <-61.115> speed <380.725>;
				turn rfupleg to x-axis <82.676> speed <562.637>;
				turn rrupleg to x-axis <-61.83> speed <528.786>;
				turn rrleg to x-axis <72.725> speed <1035.253>;
				turn rfleg to x-axis <-58> speed <105.758242>;
				turn lrleg to x-axis <71.538> speed <820.687>;
				sleep 56;
				move lrupleg to y-axis [1.65] speed [3];
				move rrupleg to y-axis [1.7] speed [0.43];
				if( !bAiming )
				{
					turn body to x-axis <-26> speed <232.808>;
				}
				turn lfupleg to x-axis <121.286> speed <584.077>;
				turn lrupleg to x-axis <-32.209> speed <498.297>;
				turn rfupleg to x-axis <114.176> speed <543.225>;
				turn rrupleg to x-axis <-31.269> speed <526.896>;
				turn rrleg to x-axis <54.956> speed <306.335>;
				turn rfleg to x-axis <-63.956> speed <102.11>;
				turn lrleg to x-axis <57.33> speed <245.066>;
				sleep 58;
			}
			if( bMoving )
			{
				move lrupleg to y-axis [0.95] speed [6.25];
				move rrupleg to y-axis [1.1] speed [5.36];
				turn body to x-axis <0> speed <232.66>;
				turn head to x-axis <0> speed <181.9>;
				turn lfupleg to x-axis <60.165> speed <545.709>;
				turn lrupleg to x-axis <3.786> speed <321.506>;
				turn rfupleg to x-axis <53> speed <545.709>;
				turn rrupleg to x-axis <-3.308> speed <249.588>;
				turn rrleg to x-axis <30.319> speed <219.978>;
				turn rfleg to x-axis <26.527> speed <807.99>;
				turn lrleg to x-axis <22.736> speed <308.808>;
				turn lfleg to x-axis <13.258> speed <588>;
				sleep 225;
			}
			Justmoved = 1;
		}
		if( !bMoving )
		{
			if( Justmoved )
			{
				move lrupleg to y-axis [0] speed [5];
				move rfupleg to y-axis [0] speed [5];
				move rrupleg to y-axis [0] speed [5];
				turn head to x-axis <0> speed <200>;
				turn body to x-axis <0> speed <200>;
				turn lfupleg to x-axis <0> speed <300>;
				turn lrupleg to x-axis <0> speed <300>;
				turn rfupleg to x-axis <0> speed <300>;
				turn rrupleg to x-axis <0> speed <300>;
				turn rrleg to x-axis <0> speed <300>;
				turn lrleg to x-axis <0> speed <300>;
				Justmoved = 0;
			}
			sleep 100;
		}
	}
}
Create()
{
	hide flare;
	dont-cache flare;
	bMoving = 0;
	bAiming = 0;
	Reload_4 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

RestoreAfterDelay()
{
	sleep 5000;
	set-signal-mask 0;
	bAiming = 0;
	turn turret to y-axis <0> speed <180>;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimPrimary(heading, pitch)
{
	bAiming = 1;
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn turret to y-axis heading speed <210>;
	while( Reload_4 )
	{
		sleep 100;
		wait-for-move barrel along z-axis;
	}
	wait-for-turn turret around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	reload_4 = 1;
	show flare;
	move barrel to z-axis [-0.7] speed [400];
	sleep 100;
	hide flare;
	move barrel to z-axis [0] speed [0.5];
	wait-for-move barrel along z-axis;
	reload_4 = 0;
	
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel type BITMAPONLY | BITMAP3;
		explode rrleg type BITMAPONLY | BITMAP4;
		explode rfleg type BITMAPONLY | BITMAP5;
		explode lrleg type BITMAPONLY | BITMAP1;
		explode lfleg type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type FALL | BITMAP1;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel type FALL | BITMAP3;
		explode rrleg type FALL | BITMAP4;
		explode rfleg type FALL | BITMAP5;
		explode lrleg type FALL | BITMAP1;
		explode lfleg type FALL | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rrleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lrleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rrleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lrleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}
