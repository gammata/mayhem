#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  Huefte, roleg, ruleg, loleg, luleg, Torso, Kopf, rShld,
       roArm, ruArm, Blitz, lShld, loArm, Punkt, luArm, Kanone,
       barrels, Atrappe;

static-var  Moving_1, Aiming_2, Ready_3, Busy_4;

SmokeUnit(healthpercent, sleeptime, smoketype, timer)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from Torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(JustMoved)
{
	while( TRUE )
	{
		if( Moving_1 )
		{
			JustMoved = 1;
			move roleg to y-axis [1] now;
			move loleg to y-axis [0] now;
			move ruleg to y-axis [1] now;
			turn roleg to x-axis <-18.995> speed <420>;
			if( !Aiming_2 )
			{
				move Torso to y-axis [0] now;
				move Kopf to z-axis [0] now;
				move loArm to x-axis [0] now;
				move roArm to x-axis [0] now;
				turn ruleg to x-axis <25.999> speed <420>;
				turn rShld to x-axis <15.996> speed <420>;
				turn lShld to x-axis <-16.996> speed <420>;
				turn loArm to z-axis <-14.996> speed <420>;
				turn luArm to x-axis <-13.997> speed <420>;
				turn roArm to z-axis <14.996> speed <420>;
				turn ruArm to x-axis <-25.999> speed <420>;
			}
			sleep 95;
			if( Moving_1 )
			{
				move roleg to y-axis [0] now;
				move ruleg to y-axis [0] now;
				turn Huefte to x-axis <2.999> speed <420>;
				turn roleg to x-axis <-33.997> speed <420>;
				turn loleg to x-axis <5.999> speed <420>;
				turn luleg to x-axis <-8.998> speed <420>;
				turn ruleg to x-axis <19.995> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <-1> speed <420>;
					turn Kopf to y-axis <2> speed <420>;
					turn rShld to x-axis <24.999> speed <420>;
					turn lShld to x-axis <-24> speed <420>;
					turn loArm to z-axis <-10.997> speed <420>;
					turn luArm to x-axis <-19.995> speed <420>;
					turn roArm to z-axis <12.997> speed <420>;
					turn ruArm to x-axis <-37.996> speed <420>;
				}
				sleep 87;
			}
			if( Moving_1 )
			{
				move loleg to y-axis [-1] now;
				turn Huefte to x-axis <5.999> speed <420>;
				turn roleg to x-axis <-49.993> speed <420>;
				turn loleg to x-axis <11.997> speed <420>;
				turn luleg to x-axis <-17.996> speed <420>;
				turn ruleg to x-axis <12.997> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <-2.999> speed <420>;
					turn Kopf to y-axis <3.999> speed <420>;
					turn rShld to x-axis <33.997> speed <420>;
					turn lShld to x-axis <-29.998> speed <420>;
					turn loArm to z-axis <-6.998> speed <420>;
					turn luArm to x-axis <-26.999> speed <420>;
					turn roArm to z-axis <10.997> speed <420>;
					turn ruArm to x-axis <-50.993> speed <420>;
				}
				sleep 71;
				move loleg to y-axis [0] now;
				turn Huefte to x-axis <7.998> speed <420>;
				turn roleg to x-axis <-51.993> speed <420>;
				turn loleg to x-axis <16.996> speed <420>;
				turn luleg to x-axis <-12.997> speed <420>;
				turn ruleg to x-axis <5.999> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <-4.999> speed <420>;
					turn Kopf to y-axis <5.999> speed <420>;
					turn rShld to x-axis <43.995> speed <420>;
					turn lShld to x-axis <-37.996> speed <420>;
					turn loArm to z-axis <-2.999> speed <420>;
					turn luArm to x-axis <-15.996> speed <420>;
					turn roArm to z-axis <9.998> speed <420>;
					turn ruArm to x-axis <-59.991> speed <420>;
				}
				sleep 68;
				move ruleg to y-axis [0] now;
				turn Huefte to x-axis <10.997> speed <420>;
				turn roleg to x-axis <-52.993> speed <420>;
				turn loleg to x-axis <21.995> speed <420>;
				turn luleg to x-axis <-6.998> speed <420>;
				turn ruleg to x-axis <0> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <-6.998> speed <420>;
					turn Kopf to y-axis <7.998> speed <420>;
					turn rShld to x-axis <53.992> speed <420>;
					turn lShld to x-axis <-44.995> speed <420>;
					turn loArm to z-axis <0> speed <420>;
					turn luArm to x-axis <-5.999> speed <420>;
					turn roArm to z-axis <8.998> speed <420>;
					turn ruArm to x-axis <-69> speed <420>;
				}
				sleep 68;
			}
			if( Moving_1 )
			{
				turn Huefte to x-axis <13.997> speed <420>;
				turn roleg to x-axis <-52.993> speed <420>;
				turn luleg to x-axis <9.998> speed <420>;
				turn ruleg to x-axis <16.996> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <-4.999> speed <420>;
					turn Kopf to y-axis <5.999> speed <420>;
					turn rShld to x-axis <44.995> speed <420>;
					turn lShld to x-axis <-39.996> speed <420>;
					turn loArm to z-axis <-3.999> speed <420>;
					turn luArm to x-axis <-13.997> speed <420>;
					turn roArm to z-axis <11.997> speed <420>;
				}
				sleep 68;
				turn Huefte to x-axis <17.996> speed <420>;
				turn roleg to x-axis <-52.993> speed <420>;
				turn luleg to x-axis <28.998> speed <420>;
				turn ruleg to x-axis <34.997> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <-2.999> speed <420>;
					turn Kopf to y-axis <3.999> speed <420>;
					turn rShld to x-axis <34.997> speed <420>;
					turn lShld to x-axis <-34.997> speed <420>;
					turn loArm to z-axis <-8.998> speed <420>;
					turn luArm to x-axis <-21.995> speed <420>;
					turn roArm to z-axis <14.996> speed <420>;
				}
				sleep 60;
				move luleg to y-axis [0] now;
				turn Huefte to x-axis <12.997> speed <420>;
				turn roleg to x-axis <-38.996> speed <420>;
				turn loleg to x-axis <11.997> speed <420>;
				turn luleg to x-axis <27.999> speed <420>;
				turn ruleg to x-axis <25.999> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <-2> speed <420>;
					turn Kopf to y-axis <2.999> speed <420>;
					turn rShld to x-axis <21.995> speed <420>;
					turn lShld to x-axis <-21.995> speed <420>;
					turn loArm to z-axis <-10.997> speed <420>;
					turn luArm to x-axis <-23> speed <420>;
					turn roArm to z-axis <14.996> speed <420>;
					turn ruArm to x-axis <-54.992> speed <420>;
				}
				sleep 58;
			}
			if( Moving_1 )
			{
				turn Huefte to x-axis <8.998> speed <420>;
				turn roleg to x-axis <-25.999> speed <420>;
				turn loleg to x-axis <1> speed <420>;
				turn luleg to x-axis <26.999> speed <420>;
				turn ruleg to x-axis <16.996> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <-1> speed <420>;
					turn Kopf to y-axis <2> speed <420>;
					turn rShld to x-axis <8.998> speed <420>;
					turn lShld to x-axis <-8.998> speed <420>;
					turn loArm to z-axis <-11.997> speed <420>;
					turn luArm to x-axis <-24> speed <420>;
					turn roArm to z-axis <14.996> speed <420>;
					turn ruArm to x-axis <-40.995> speed <420>;
				}
				sleep 90;
				turn Huefte to x-axis <3.999> speed <420>;
				turn roleg to x-axis <-12.997> speed <420>;
				turn loleg to x-axis <-7.998> speed <420>;
				turn luleg to x-axis <26.999> speed <420>;
				turn ruleg to x-axis <7.998> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <0> speed <420>;
					turn Kopf to y-axis <1> speed <420>;
					turn rShld to x-axis <-3.999> speed <420>;
					turn lShld to x-axis <2.999> speed <420>;
					turn loArm to z-axis <-12.997> speed <420>;
					turn luArm to x-axis <-24.999> speed <420>;
					turn roArm to z-axis <14.996> speed <420>;
					turn ruArm to x-axis <-27.999> speed <420>;
				}
				sleep 90;
			}
			if( Moving_1 )
			{
				move loleg to y-axis [1] now;
				move luleg to y-axis [1] now;
				turn Huefte to x-axis <0> speed <420>;
				turn roleg to x-axis <0> speed <420>;
				turn loleg to x-axis <-18.995> speed <420>;
				turn luleg to x-axis <25.999> speed <420>;
				turn ruleg to x-axis <0> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <0> speed <420>;
					turn Kopf to y-axis <0> speed <420>;
					turn rShld to x-axis <-16.996> speed <420>;
					turn lShld to x-axis <15.996> speed <420>;
					turn loArm to z-axis <-14.996> speed <420>;
					turn luArm to x-axis <-25.999> speed <420>;
					turn roArm to z-axis <14.996> speed <420>;
					turn ruArm to x-axis <-13.997> speed <420>;
				}
				sleep 98;
				move loleg to y-axis [0] now;
				move luleg to y-axis [0] now;
				turn Huefte to x-axis <2.999> speed <420>;
				turn roleg to x-axis <5.999> speed <420>;
				turn loleg to x-axis <-33.997> speed <420>;
				turn luleg to x-axis <18.995> speed <420>;
				turn ruleg to x-axis <-8.998> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <2> speed <420>;
					turn Kopf to y-axis <-1> speed <420>;
					turn rShld to x-axis <-24> speed <420>;
					turn lShld to x-axis <24.999> speed <420>;
					turn loArm to z-axis <-12.997> speed <420>;
					turn luArm to x-axis <-37.996> speed <420>;
					turn roArm to z-axis <10.997> speed <420>;
					turn ruArm to x-axis <-19.995> speed <420>;
				}
				sleep 86;
			}
			if( Moving_1 )
			{
				move roleg to y-axis [-1] now;
				turn Huefte to x-axis <5.999> speed <420>;
				turn roleg to x-axis <11.997> speed <420>;
				turn loleg to x-axis <-49.993> speed <420>;
				turn luleg to x-axis <12.997> speed <420>;
				turn ruleg to x-axis <-17.996> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <3.999> speed <420>;
					turn Kopf to y-axis <-2.999> speed <420>;
					turn rShld to x-axis <-29.998> speed <420>;
					turn lShld to x-axis <33.997> speed <420>;
					turn loArm to z-axis <-10.997> speed <420>;
					turn luArm to x-axis <-50.993> speed <420>;
					turn roArm to z-axis <6.998> speed <420>;
					turn ruArm to x-axis <-26.999> speed <420>;
				}
				sleep 80;
				move roleg to y-axis [0] now;
				turn Huefte to x-axis <7.998> speed <420>;
				turn roleg to x-axis <16.996> speed <420>;
				turn loleg to x-axis <-50.993> speed <420>;
				turn luleg to x-axis <5.999> speed <420>;
				turn ruleg to x-axis <-11.997> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <5.999> speed <420>;
					turn Kopf to y-axis <-4.999> speed <420>;
					turn rShld to x-axis <-36.996> speed <420>;
					turn lShld to x-axis <43.995> speed <420>;
					turn loArm to z-axis <-9.998> speed <420>;
					turn luArm to x-axis <-59.991> speed <420>;
					turn roArm to z-axis <2.999> speed <420>;
					turn ruArm to x-axis <-15.996> speed <420>;
				}
				sleep 81;
			}
			if( Moving_1 )
			{
				turn Huefte to x-axis <10.997> speed <420>;
				turn roleg to x-axis <21.995> speed <420>;
				turn loleg to x-axis <-52.993> speed <420>;
				turn luleg to x-axis <0> speed <420>;
				turn ruleg to x-axis <-6.998> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <7.998> speed <420>;
					turn Kopf to y-axis <-6.998> speed <420>;
					turn rShld to x-axis <-44.995> speed <420>;
					turn lShld to x-axis <53.992> speed <420>;
					turn loArm to z-axis <-8.998> speed <420>;
					turn luArm to x-axis <-69> speed <420>;
					turn roArm to z-axis <0> speed <420>;
					turn ruArm to x-axis <-5.999> speed <420>;
				}
				sleep 79;
				turn Huefte to x-axis <13.997> speed <420>;
				turn roleg to x-axis <21.995> speed <420>;
				turn loleg to x-axis <-52.993> speed <420>;
				turn luleg to x-axis <16.996> speed <420>;
				turn ruleg to x-axis <9.998> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <5.999> speed <420>;
					turn Kopf to y-axis <-5.999> speed <420>;
					turn rShld to x-axis <-39.996> speed <420>;
					turn lShld to x-axis <43.995> speed <420>;
					turn loArm to z-axis <-11.997> speed <420>;
					turn luArm to x-axis <-69> speed <420>;
					turn roArm to z-axis <3.999> speed <420>;
					turn ruArm to x-axis <-18.995> speed <420>;
				}
				sleep 80;
			}
			if( Moving_1 )
			{
				turn Huefte to x-axis <17.996> speed <420>;
				turn roleg to x-axis <21.995> speed <420>;
				turn loleg to x-axis <-52.993> speed <420>;
				turn luleg to x-axis <34.997> speed <420>;
				turn ruleg to x-axis <28.998> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <3.999> speed <420>;
					turn Kopf to y-axis <-3.999> speed <420>;
					turn rShld to x-axis <-34.997> speed <420>;
					turn lShld to x-axis <34.997> speed <420>;
					turn loArm to z-axis <-14.996> speed <420>;
					turn luArm to x-axis <-69> speed <420>;
					turn roArm to z-axis <8.998> speed <420>;
					turn ruArm to x-axis <-31.998> speed <420>;
				}
				sleep 48;
				turn Huefte to x-axis <12.997> speed <420>;
				turn roleg to x-axis <10.997> speed <420>;
				turn loleg to x-axis <-39.996> speed <420>;
				turn luleg to x-axis <25.999> speed <420>;
				turn ruleg to x-axis <27.999> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <2.999> speed <420>;
					turn Kopf to y-axis <-2.999> speed <420>;
					turn rShld to x-axis <-21.995> speed <420>;
					turn lShld to x-axis <20.995> speed <420>;
					turn luArm to x-axis <-54.992> speed <420>;
					turn roArm to z-axis <10.997> speed <420>;
					turn ruArm to x-axis <-30.998> speed <420>;
				}
				sleep 49;
				turn Huefte to x-axis <8.998> speed <420>;
				turn roleg to x-axis <1> speed <420>;
				turn loleg to x-axis <-25.999> speed <420>;
				turn luleg to x-axis <16.996> speed <420>;
				turn ruleg to x-axis <26.999> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <2> speed <420>;
					turn Kopf to y-axis <-2> speed <420>;
					turn rShld to x-axis <-8.998> speed <420>;
					turn lShld to x-axis <7.998> speed <420>;
					turn luArm to x-axis <-40.995> speed <420>;
					turn roArm to z-axis <11.997> speed <420>;
					turn ruArm to x-axis <-28.998> speed <420>;
				}
				sleep 65;
				turn Huefte to x-axis <3.999> speed <420>;
				turn roleg to x-axis <-7.998> speed <420>;
				turn loleg to x-axis <-12.997> speed <420>;
				turn luleg to x-axis <7.998> speed <420>;
				turn ruleg to x-axis <26.999> speed <420>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <1> speed <420>;
					turn Kopf to y-axis <-1> speed <420>;
					turn rShld to x-axis <2.999> speed <420>;
					turn lShld to x-axis <-3.999> speed <420>;
					turn luArm to x-axis <-26.999> speed <420>;
					turn roArm to z-axis <12.997> speed <420>;
					turn ruArm to x-axis <-26.999> speed <420>;
				}
				sleep 64;
			}
		}
		if( !Moving_1 )
		{
			if( JustMoved )
			{
				JustMoved = 0;
				move roleg to y-axis [0] now;
				move loleg to y-axis [0] now;
				move ruleg to y-axis [0] now;
				move luleg to y-axis [0] now;
				turn Huefte to x-axis <0> speed <200>;
				turn roleg to x-axis <0> speed <200>;
				turn ruleg to x-axis <0> speed <200>;
				turn loleg to x-axis <0> speed <200>;
				turn luleg to x-axis <0> speed <200>;
				if( !Aiming_2 )
				{
					turn Torso to y-axis <0> speed <89.995>;
					turn ruArm to x-axis <0> speed <200>;
					turn roArm to x-axis <0> speed <200>;
					turn luArm to x-axis <0> speed <200>;
					turn loArm to x-axis <0> speed <200>;
					turn ruArm to z-axis <0> speed <200>;
					turn roArm to z-axis <6.998> speed <200>;
					turn luArm to z-axis <0> speed <200>;
					turn loArm to z-axis <-6.998> speed <200>;
					turn loArm to y-axis <0> speed <200>;
					turn roArm to y-axis <0> speed <200>;
					turn lShld to x-axis <0> speed <200>;
					turn rShld to x-axis <0> speed <200>;
				}
			}
			sleep 150;
		}
	}
}

Create()
{
	hide Blitz;
	dont-cache Blitz;
	spin Blitz around y-axis speed <-750>;
	hide Kanone;
	hide barrels;
	Moving_1 = 0;
	Aiming_2 = 0;
	Ready_3 = 0;
	Busy_4 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	Moving_1 = 1;
}

StopMoving()
{
	Moving_1 = 0;
}

RestoreAfterDelay()
{
	sleep 2000;	
	stop-spin barrels around y-axis decelerate <25>;
	sleep 4000;
	set-signal-mask 0;
	while( Busy_4 )
	{
		sleep 200;
	}
	Busy_4 = 1;
	Ready_3 = 0;
	turn loArm to z-axis <0> speed <80>;
	turn loArm to y-axis <0> speed <180>;
	turn lShld to x-axis <-50> speed <160>;
	turn rShld to x-axis <-130> speed <500>;
	turn ruArm to x-axis <-105> speed <400>;
	turn roArm to y-axis <0> speed <180>;
	sleep 260;
	hide Kanone;
	hide Barrels;
	show Atrappe;
	turn Kanone to z-axis <0> speed <180>;
	turn Kanone to x-axis <0> speed <180>;
	turn loArm to z-axis <0> speed <80>;
	turn luArm to z-axis <0> speed <220>;
	turn luArm to y-axis <0> speed <220>;
	turn roArm to y-axis <0> speed <40>;
	turn Torso to y-axis <0> speed <100>;
	turn Punkt to y-axis <0> speed <100>;
	turn ruArm to z-axis <0> speed <220>;
	turn ruArm to x-axis <0> speed <80>;
	turn rShld to x-axis <0> speed <325>;
	turn Atrappe to x-axis <0> speed <90>;
	turn luArm to x-axis <0> speed <180>;
	turn lShld to x-axis <0> speed <160>;
	turn roArm to z-axis <0> speed <180>;
	turn loArm to x-axis <0> speed <180>;
	turn luArm to x-axis <0> speed <90>;
	turn loArm to y-axis <0> speed <180>;
	turn roArm to x-axis <0> speed <180>;
	turn Kopf to y-axis <0> speed <160>;
	turn Torso to y-axis <0> speed <180>;
	sleep 400;
	Aiming_2 = 0;
	Busy_4 = 0;
}

SweetSpot(piecenum)
{
	piecenum = Torso;
}

QueryPrimary(piecenum)
{
	piecenum = Blitz;
}

AimFromPrimary(piecenum)
{
	piecenum = ruArm;
}

AimPrimary(heading, pitch)
{
	Aiming_2 = 1;
	while( Busy_4 )
	{
		sleep 100;
	}
	if( !Ready_3 )
	{
		Busy_4 = 1;
		turn roArm to x-axis <0> speed <300>;
		turn loArm to x-axis <0> speed <300>;
		turn luArm to x-axis <0> speed <120>;
		turn loArm to y-axis <0> speed <300>;
		turn roArm to y-axis <0> speed <300>;
		turn ruArm to z-axis <0> speed <300>;
		turn roArm to z-axis <7> speed <200>;
		turn loArm to z-axis <-7> speed <200>;
		turn Torso to y-axis <-50> speed <120>;
		turn luArm to z-axis <20> speed <100>;
		turn luArm to z-axis <30> speed <100>;
		turn luArm to y-axis <45> speed <90>;
		turn loArm to z-axis <20> speed <100>;
		turn lShld to x-axis <-50> speed <160>;
		turn Atrappe to x-axis <45> speed <180>;
		turn rShld to x-axis <-130> speed <500>;
		turn ruArm to x-axis <-105> speed <400>;
		sleep 260;
		show Kanone;
		show barrels;
		hide Atrappe;
		spin barrels around y-axis speed <1400> accelerate <30>;
		turn Kanone to z-axis <-30> speed <220>;
		turn rShld to x-axis <20> speed <500>;
		turn ruArm to x-axis <-110> speed <30>;
		turn lShld to x-axis <-50> speed <160>;
		turn roArm to y-axis <20> speed <50>;
		sleep 300;
		Ready_3 = 1;
		Busy_4 = 0;
	}
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn Punkt to y-axis heading speed <180>;
	wait-for-turn Punkt around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move Kanone to y-axis [0.5] speed [500];
	turn luArm to z-axis <34.991> speed <9000>;
	show Blitz;
	sleep 60;	
	Move Kanone to y-axis [0] speed [5];
	turn luArm to z-axis <30> speed <45>;
	sleep 20;
	hide Blitz;
}

Killed(severity, corpsetype)
{
	hide Blitz;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode Huefte type BITMAPONLY | BITMAP1;
		explode roleg type BITMAPONLY | BITMAP1;
		explode ruleg type BITMAPONLY | BITMAP1;
		explode loleg type BITMAPONLY | BITMAP1;
		explode luleg type BITMAPONLY | BITMAP1;
		explode Torso type BITMAPONLY | BITMAP1;
		explode Kopf type BITMAPONLY | BITMAP1;
		explode roArm type BITMAPONLY | BITMAP1;
		explode ruArm type BITMAPONLY | BITMAP1;
		explode loArm type BITMAPONLY | BITMAP1;
		explode luArm type BITMAPONLY | BITMAP1;
		explode Kanone type FALL | SMOKE | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode Huefte type BITMAPONLY | BITMAP4;
		explode roleg type BITMAPONLY | BITMAP4;
		explode ruleg type BITMAPONLY | BITMAP4;
		explode loleg type BITMAPONLY | BITMAP4;
		explode luleg type BITMAPONLY | BITMAP4;
		explode Torso type BITMAPONLY | BITMAP3;
		explode Kopf type FALL | SMOKE | BITMAP4;
		explode roArm type FALL | SMOKE | BITMAP5;
		explode ruArm type FALL | SMOKE | BITMAP5;
		explode luArm type FALL | SMOKE | BITMAP5;
		explode Kanone type FALL | SMOKE | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode Huefte type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode roleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode ruleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode loleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode luleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode Torso type BITMAPONLY | BITMAP2;
	explode Kopf type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode roArm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode ruArm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode loArm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode luArm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}
