#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"
//#include "unitsweaps.h"

piece   flare1, flare2, base, turret, sleeve, arms, hand1, hand2,
        hand3, stand, upgrade, hidden;

static-var  Speed_1, Speed_2, Speed_3, on_4, busy_5, gun_1, upgraded;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Speed_1 = 0;
	Speed_2 = 91;
	Speed_3 = 546;
	gun_1 = 0;
	on_4= 0;
	upgraded = 0;
	busy_5 = 0;
	hide upgrade;
	hide flare1;
	hide flare2;
	dont-cache flare1;
	dont-cache flare2;
	dont-shade arms;
	dont-shade hand1;
	dont-shade hand2;
	dont-shade hand3;
	dont-shade turret;
	dont-shade sleeve;
	hide turret;
	hide sleeve;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

Activate()
{
	if( !upgraded )
	{
		set INBUILDSTANCE to 1;
	}
	on_4 = 1;
	while( busy_5 )
	{
		sleep 200;
	}
	if( on_4 )
	{
		busy_5 = 1;
		dont-cache arms;
		dont-cache hand1;
		dont-cache hand2;
		dont-cache hand3;
		dont-cache stand;
		move arms to y-axis [6] speed [5];
		wait-for-move arms along y-axis;
		if( on_4 )
		{
			spin arms around y-axis speed Speed_1 accelerate Speed_2;
		}
		busy_5 = 0;
	}
}

Deactivate()
{
	on_4 = 0;
	while( busy_5 )
	{
		sleep 200;
	}
	if( !on_4 )
	{
		busy_5 = 1;
		stop-spin arms around y-axis decelerate Speed_3;
		sleep 500;
		if( !on_4 )
		{		
			wait-for-turn arms around y-axis;
		}
		if( !on_4 )
		{
			turn arms to y-axis <0> speed <35>;
			wait-for-turn arms around y-axis;
		}
		if( !on_4 )
		{
			move arms to y-axis [0] speed [6];
			wait-for-move arms along y-axis;
		}
		if( !on_4 )
		{
			cache arms;
		}
		busy_5 = 0;
	}
}

SetSpeed(Func_Var_1)
{
	Speed_1 = Func_Var_1 * 40;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arms type BITMAPONLY | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		explode hand1 type BITMAPONLY | BITMAP5;
		explode hand2 type BITMAPONLY | BITMAP5;
		explode hand3 type BITMAPONLY | BITMAP5;
		if( upgraded )
		{
			explode base type BITMAPONLY | BITMAP2;
			explode turret type BITMAPONLY | BITMAP2;
			explode sleeve type BITMAPONLY | BITMAP2;
		}
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arms type BITMAPONLY | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		explode hand1 type FALL | BITMAP5;
		explode hand2 type FALL | BITMAP5;
		explode hand3 type FALL | BITMAP5;
		if( upgraded )
		{
		explode base type BITMAPONLY | BITMAP3;
		explode turret type BITMAPONLY | BITMAP2;
		explode sleeve type FALL | BITMAP2;
		}
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode arms type SHATTER | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		explode hand1 type FALL | SMOKE | BITMAP5;
		explode hand2 type FALL | SMOKE | BITMAP5;
		explode hand3 type FALL | SMOKE | BITMAP5;
		if( upgraded )
		{
		explode base type BITMAPONLY | BITMAP2;
		explode turret type SHATTER | BITMAP3;
		explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		}
		return (0);
	}
	corpsetype = 3;
	explode arms type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode base type BITMAPONLY | BITMAP2;
	explode hand1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode hand2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode hand3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	if( upgraded )
	{
		explode base type BITMAPONLY | BITMAP2;
		explode turret type SHATTER | BITMAP3;
		explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	}
}
