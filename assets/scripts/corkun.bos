#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, wing1, wing2, wing1ar, wing2ar, base;

static-var  gun_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	set ARMORED to 1;
	gun_1 = 0;
	start-script SmokeUnit();
}

Activate()
{
	turn wing1 to z-axis <-90> speed <120>;
	turn wing2 to z-axis <90> speed <120>;
	turn wing1ar to z-axis <-30> speed <40>;
	turn wing2ar to z-axis <30> speed <40>;
	return (0);
}

Deactivate()
{
	turn wing1 to z-axis <0> speed <100>;
	turn wing2 to z-axis <0> speed <100>;
	turn wing1ar to z-axis <0> speed <40>;
	turn wing2ar to z-axis <0> speed <40>;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

FirePrimary()
{
	gun_1 = !gun_1;
}

QueryPrimary(piecenum)
{
	piecenum = gun_1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode wing1ar type BITMAPONLY | BITMAP2;
		explode wing2ar type BITMAPONLY | BITMAP3;
		explode wing1 type BITMAPONLY | BITMAP5;
		explode wing2 type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode wing1ar type FALL | SMOKE | BITMAP2;
		explode wing2ar type FALL | SMOKE | BITMAP3;
		explode wing1 type BITMAPONLY | BITMAP5;
		explode wing2 type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode wing1ar type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode wing2ar type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode wing1 type BITMAPONLY | BITMAP5;
	explode wing2 type BITMAPONLY | BITMAP1;
}