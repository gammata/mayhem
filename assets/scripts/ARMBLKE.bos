#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, aile1, aile2, flare1, flare2;

static-var  Gun_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	set ARMORED to 1;
	Gun_1 = 0;
	start-script SmokeUnit();
}

Activate()
{
	move aile1 to x-axis [-2.6] speed [3];
	move aile2 to x-axis [2.6] speed [3];
}

Deactivate()
{
	move aile1 to x-axis [0] speed [2.2];
	move aile2 to x-axis [0] speed [2.2];
}

QueryPrimary(piecenum)
{
	if( !gun_1 )
	{
		piecenum = flare1;
		gun_1 = 1;
		return(0);
	}
	piecenum = flare2;
	gun_1 = 0;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode body type BITMAPONLY | BITMAP2;
		explode aile1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode aile2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	}
	if( severity <= 50 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode aile1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode aile2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	}
	explode base type BITMAPONLY | BITMAP1;
	explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode aile1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode aile2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
}
