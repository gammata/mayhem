#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"
//#include "unitsweaps.h"

piece  Base, glow, spinner, steam, pieces;

static-var  on_1, radiation_2;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from pieces;
			emit-sfx smoketype from steam;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		if( healthpercent <= 10 )
		{
			radiation_2 = 1;
		}
		sleep sleeptime;
	}
}

Create()
{
	on_1 = 0;
	radiation_2 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

EmitSteam(cycle)
{
	while( On_1 )
	{
		while( cycle < 4 )
		{
			emit-sfx 256 | 1 from steam;
			sleep 150;
			++cycle;
		}
		sleep 2000;
		cycle = 0;
	}
}

Activate()
{
	if( !On_1 )
	{
		On_1 = 1;
		dont-cache glow;
		spin spinner around y-axis speed <720>;
		start-script EmitSteam(1);
	}
}

Deactivate()
{
	On_1 = 0;
	cache glow;
}

SweetSpot(piecenum)
{
	piecenum = Base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode glow type SHATTER | BITMAP3;
		explode pieces type BITMAPONLY | BITMAPNUKE;
		explode spinner type BITMAPONLY | BITMAP2;
		explode Base type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode glow type SHATTER | BITMAP3;
		explode pieces type BITMAPONLY | BITMAPNUKE;
		explode spinner type BITMAPONLY | BITMAP2;
		explode Base type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode glow type SHATTER | BITMAP3;
	explode pieces type BITMAPONLY | BITMAPNUKE;
	explode spinner type BITMAPONLY | BITMAP2;
	explode Base type BITMAPONLY | BITMAP2;
}
